"""atualizacao nas tabelas folhas

Revision ID: fb4ecff02b05
Revises: 
Create Date: 2025-06-17 19:12:19.269588

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fb4ecff02b05'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('folha', schema=None) as batch_op:
        # Adicionar colunas como nullable primeiro
        batch_op.add_column(sa.Column('mes_ano', sa.String(length=7), nullable=True))
        batch_op.add_column(sa.Column('valor_total', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('observacao', sa.Text(), nullable=True))
        batch_op.create_index(batch_op.f('ix_folha_mes_ano'), ['mes_ano'], unique=False)

    # Atualizar dados existentes
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE folha 
        SET mes_ano = TO_CHAR(data, 'YYYY-MM'),
            valor_total = 0.0,
            status = 'aberta'
        WHERE mes_ano IS NULL
    """))

    # Agora tornar mes_ano NOT NULL
    with op.batch_alter_table('folha', schema=None) as batch_op:
        batch_op.alter_column('mes_ano', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('folha', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_folha_mes_ano'))
        batch_op.drop_column('observacao')
        batch_op.drop_column('status')
        batch_op.drop_column('valor_total')
        batch_op.drop_column('mes_ano')

    # ### end Alembic commands ###
